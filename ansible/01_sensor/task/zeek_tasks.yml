- name: get os id
  set_fact:
    os_id: "{{ ansible_lsb.id }}"

- lineinfile:
    dest: /etc/dphys-swapfile
    regexp: '^CONF_SWAPSIZE='
    line: 'CONF_SWAPSIZE=2048'
  when: os_id == "Raspbian"

- name: swapoff
  command: dphys-swapfile swapoff
  when: os_id == "Raspbian"

- name: initialize swap conf
  command: dphys-swapfile setup
  when: os_id == "Raspbian"

- name: swapon
  command: dphys-swapfile swapon
  when: os_id == "Raspbian"

- name: install dependency packages
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - ca-certificates
    - dirmngr
    - gnupg
    - curl
    - build-essential
    - make
    - gcc
    - g++
    - flex
    - bison
    - libpcap-dev
    - python-dev
    - cmake
    - swig
    - zlib1g-dev
    - libssl-dev
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: define mirror url
  set_fact:
    mirror_url: "https://cdn.openbsd.org/pub/OpenBSD"
  when: ansible_distribution == 'OpenBSD'

- name: overwrite zeek install dir
  set_fact:
    zeek_dir: "/usr/local/zeek"
  when: ansible_distribution == 'OpenBSD'

- lineinfile:
   dest: /etc/installurl
   create: yes
   regexp: '^{{ mirror_url }}'
   line: '{{ mirror_url }}'
  when: ansible_distribution == 'OpenBSD'

- name: install gnupg packages
  command: pkg_add https://cdn.openbsd.org/pub/OpenBSD/6.4/packages/amd64/gnupg-2.2.10.tgz
  when: ansible_distribution == 'OpenBSD'

- name: install packages
  openbsd_pkg:
    name: "{{ packages }}"
  vars:
    packages:
    - curl
    - gcc
    - python%2.7
    - gtar--
    - g++
    - cmake
    - bison
    - libbind
    - bash
    - swig
    - findutils
  when: ansible_distribution == 'OpenBSD'

# ln -s /usr/local/bin/python2.7 /usr/local/bin/python
- name: Create python sym links
  file: src=/usr/local/bin/python2.7 path=/usr/local/bin/python state=link
  when: ansible_distribution == 'OpenBSD'
- name: Create python sym links
  file: src=/usr/local/bin/python2.7-2to3 path=/usr/local/bin/2to3 state=link
  when: ansible_distribution == 'OpenBSD'
- name: Create python sym links
  file: src=/usr/local/bin/python2.7-config path=/usr/local/bin/python-config state=link
  when: ansible_distribution == 'OpenBSD'
- name: Create python sym links
  file: src=/usr/local/bin/pydoc2.7 path=/usr/local/bin/pydoc state=link
  when: ansible_distribution == 'OpenBSD'
- name: Create gpg sym links
  file: src=/usr/local/bin/gpg2 path=/usr/bin/gpg state=link
  when: ansible_distribution == 'OpenBSD'

- name: Create zeek install dir
  file: path={{zeek_dir}} state=directory

- name: Download zeek source
  get_url:
    url: https://download.zeek.org/zeek-{{zeek_ver}}.tar.gz
    dest: /tmp/

- name: Download zeek signature
  get_url:
    url: https://download.zeek.org/zeek-{{zeek_ver}}.tar.gz.asc
    dest: /tmp/

- name: zeek pub key
  copy:
    src: ./data/zeek.key.asc
    dest: /tmp/zeek.key.asc

- shell: '/usr/bin/gpg --no-tty --import /tmp/zeek.key.asc'
- shell: '/usr/bin/gpg --no-tty --verify /tmp/zeek-{{zeek_ver}}.tar.gz.asc /tmp/zeek-{{zeek_ver}}.tar.gz'
  register: gpg_verify_result

- debug:
    var: gpg_verify_result.stdout_lines

- debug:
    var: gpg_verify_result

- name: Extract zeek archive
  unarchive:
    src: /tmp/zeek-{{zeek_ver}}.tar.gz
    dest: /tmp
    remote_src: yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Extract zeek archive
  unarchive:
    src: /tmp/zeek-{{zeek_ver}}.tar.gz
    dest: /home
    remote_src: yes
  when: ansible_distribution == 'OpenBSD'

- name: configure zeek
  shell: |
    cd /tmp/zeek-{{zeek_ver}}
    ./configure --prefix={{zeek_dir}} --with-pcap={{pfring_dir}}
  args:
    executable: /bin/sh
  when: (pfring_dir is defined and os_id != "Raspbian") and (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')

- name: configure zeek without pfring
  shell: |
    cd /tmp/zeek-{{zeek_ver}}
    ./configure --prefix={{zeek_dir}}
  args:
    executable: /bin/sh
  when: (pfring_dir is not defined or os_id == "Raspbian") and (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')

- name: configure zeek
  shell: |
    cd /home/zeek-{{zeek_ver}}
    ./configure --prefix={{zeek_dir}}
  args:
    executable: /bin/sh
  environment:
    CC: "egcc"
    CXX: "eg++"
    LDFLAGS: "-L/usr/local/lib/libbind -lbind -Wl,-rpath /usr/local/lib/libbind"
    ZEEK_DIR: "{{zeek_dir}}"
  when: ansible_distribution == 'OpenBSD'

- name: Compile and install zeek
  shell: |
    cd /tmp/zeek-{{zeek_ver}}
    make
    make install
  args:
    executable: /bin/sh
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Compile and install zeek
  shell: |
    cd /home/zeek-{{zeek_ver}}
    make
    make install
  args:
    executable: /bin/sh
  environment:
    CC: "egcc"
    CXX: "eg++"
    LDFLAGS: "-L/usr/local/lib/libbind -lbind -Wl,-rpath /usr/local/lib/libbind"
    ZEEK_DIR: "{{zeek_dir}}"
  when: ansible_distribution == 'OpenBSD'

- lineinfile:
   dest: '{{zeek_dir}}/share/zeek/site/local.zeek'
   regexp: '^redef ignore_checksums = T;'
   line: 'redef ignore_checksums = T;'

- lineinfile:
   dest: '{{zeek_dir}}/share/zeek/site/local.zeek'
   regexp: '^@load policy/tuning/json-logs.zeek'
   line: '@load policy/tuning/json-logs.zeek'


- template:
   src: './template/zeek/node.cfg.j2'
   dest: '{{zeek_dir}}/etc/node.cfg'

- template:
   src: './template/zeek/zeek.service.j2'
   dest: '/etc/systemd/system/zeek.service'
   mode: 0755
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- lineinfile:
   dest: '/etc/crontab'
   line: '0-59/5 * * * * root {{zeek_dir}}/bin/zeekctl cron'
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- lineinfile:
   dest: '/var/cron/tabs/root'
   line: '0-59/5 * * * * {{zeek_dir}}/bin/zeekctl cron'
  when: ansible_distribution == 'OpenBSD'

- shell: '{{zeek_dir}}/bin/zeekctl deploy'
